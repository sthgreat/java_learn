代理模式与装饰者模式区别：
    代理模式在于控制，装饰者模式在于增强。
    代理模式是单一的，装饰者模式可以反复装饰。

代理模式：当目标对象因为某些原因不方便直接访问时，通过代理对象控制对目标对象的访问。例子：添加日志。
    静态代理：代理对象持有一个目标对象的引用，代理对象与目标对象实现同一个接口，代理对象重写方法，并在其中引用目标对象的方法，在其中添加控制元素。
    动态代理：静态代理的缺陷是每个对象都需要对应一个代理对象，目标繁杂。动态代理只需要一个代理对象即可完成代理任务。
        1.JDK的动态代理：实现InvocationHandler接口中的invoke函数，将相关逻辑写入该函数中。使用method.invoke指定目标对象中要被执行的函数。
        使用Proxy.newProxyInstance()在JVM内存中动态生成代理对象，所需参数为handler，目标对象classLoader，interface。
        代理对象的所有函数执行均会加入InvocationHandler中的逻辑。
