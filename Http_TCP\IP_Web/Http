B/S - > C/S
浏览器/服务器 -> 客户端->服务端 
#---------------------------#
当一个用户输入一个URL：

1、请求DNS将域名解析成对应的IP地址
2、根据IP地址在互联网上找到对应的服务器（建立连接）
3、像这个服务器发起一个GET请求
4、由这个服务器决定返回默认的数据资源给用户
具体：https://www.cnblogs.com/yuanzhiguo/p/8119470.html

#---------------------------#
NIO、BIO：

BIO：线程等待网络另一端的数据。举个例子，当用read去读取网络的数据时，是无法预知对方是否已经发送数据的。因此在收到数据之前，能做的只有等待，直到对方把
数据发过来，或者等到网络超时。
对于单线程的网络服务，这样做就会有卡死的问题。因为当等待时，整个线程会被挂起，无法执行，也无法做其他的工作。

NIO：轮询，发现没有数据到达即先干其他的事，隔一段再回来查看。

IO多路复用：操作系统监听事件，来数据了就告知程序。
#---------------------------#
IO优化

1.提升I/O性能：增加缓存，减少磁盘访问次数。
2.TCP参数调优：如设置time_wait来设置连接重用时间等等
3.网络I/O优化：减少网络交互的次数（设置本地缓存），减少传输数据流量，减少编码（提前将字符化为字节）

#---------------------------#
servlet

一个servlet容器中包含有很多Context容器，一个Context容器负责一个Web应用，其中容器的配置属性由应用的Web.xml指定。
真正运行Servlet的Servlet容器是Context容器。
