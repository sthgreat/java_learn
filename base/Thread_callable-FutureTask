package java_learn;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.FutureTask;

public class Test{
	public static void main(String[] args) throws Exception {
		Mythread mt = new Mythread();
		FutureTask<String> ft1 = new FutureTask<String>(mt);
		FutureTask<String> ft2 = new FutureTask<String>(mt);
		FutureTask<String> ft3 = new FutureTask<String>(mt);
		new Thread(ft1, "抢票者A").start();
		new Thread(ft2, "抢票者B").start();
		new Thread(ft3, "抢票者C").start();
		System.out.println(ft1.get());
		System.out.println(ft2.get());
		System.out.println(ft3.get());
		
	}
}

class Mythread implements Callable<String>{
	private boolean flag = false;
	public String call() {
		synchronized(this) {//数据同步
			if(flag == false) {
				flag = true;
				return Thread.currentThread().getName() + "抢到了票！";
			}else {
				return Thread.currentThread().getName() + "抢票失败！";
			}
		}
	}
}
