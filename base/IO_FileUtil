package java_learn;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class Test{
	public static void main(String[] args) throws Exception {
		if(args.length != 2) {
			System.out.println("文件输入结构错误，执行结构：Java Test 拷贝文件源路径 拷贝文件目标路径");
			System.exit(1);
		}
		FileUtil fu = new FileUtil(args[0], args[1]);
		long start = System.currentTimeMillis();
		System.out.println(fu.copy() ? "文件拷贝成功！" : "文件拷贝失败！");
		long end = System.currentTimeMillis();
		System.out.println("拷贝时间：" + (end - start));
	}
}

class FileUtil{  //文件操作类
	private File srcFile;  //源文件路径
	private File targetFile;  //目标文件路径
	FileUtil(String arg1, String arg2){
		this(new File(arg1), new File(arg2));
	}
	public FileUtil(File srcFile, File targetFile) {
		super();
		this.srcFile = srcFile;
		this.targetFile = targetFile;
	}
	
	public boolean copyFile(File srcFile, File targetFile) throws Exception {
		byte[] data = new byte[1024];
		InputStream is = null;
		OutputStream os = null;
		
		try { //
			is = new FileInputStream(srcFile);
			os = new FileOutputStream(targetFile);
			int len = 0;
			while((len = is.read(data))!=-1) {
				os.write(data,0,len);
			}
			return true;
		}catch(Exception e){
			throw e;
		}finally {
			if(is!=null) {
				is.close();
			}
			if(os!=null) {
				os.close();
			}
		}
	}
	
	public boolean copyDir(File srcFile, File targetFile) throws Exception {
		if(!targetFile.exists()) {
			targetFile.mkdir();
		}
		copyImpl(this.srcFile);
		return false;
	}
	
	public void copyImpl(File file) throws Exception {
		if(file.isDirectory()) {
			File[] results = file.listFiles();
			for(int x = 0;x<results.length;x++) {
				copyImpl(results[x]);
			}
		}else {
			File t_file = new File(this.targetFile.getPath() + file.separator + file.getPath().replace(this.srcFile + file.separator, ""));
			this.copyFile(file, t_file);
		}
	}
	
	public boolean copy() throws Exception {
		if(!this.srcFile.exists()) {
			System.out.println("源文件不存在");
			return false;
		}
		if(!this.srcFile.getParentFile().exists()) {
			this.srcFile.getParentFile().mkdirs();
		}
		
		if(this.srcFile.isFile()) {
			copyFile(this.srcFile, this.targetFile);
			return true;
		}else {
			copyDir(this.srcFile, this.targetFile);
			return true;
		}
	}
}
