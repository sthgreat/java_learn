Java的垃圾回收技术，负责回收不用的对象，释放内存，避免内存泄漏与内存溢出情况。

算法：
1.引用计数算法：给对象添加一个引用技术器。每当有个地方引用它，计数器增加一；当引用失效，计数器减少一。任何时刻，计数器为0的对象就表示不可能再被引用。
  缺点：很难解决对象间循环引用的情况。如A引用B，B引用A，除此之外两个对象再无其他引用。
  
2.可达性算法：通过一系列被称为“GC Roots”的对象作为起始点从这些节点开始往下搜索，搜索走过的路经被称为引用链，当一个对象到达GC Roots没有任何引用链
  相连，证明该对象不可用。
  可作为GC Roots的对象包括下面几种：a.虚拟机栈中引用的对象
                                 b.方法区中类静态属性引用的对象
                                 c.方法区中常量引用的对象
                                 d.本地方法栈中引用的对象
                                 
引用的四种类型:强引用,软引用,弱引用,虚引用

#-----------------------#
方法区回收:
集中回收两个部分:1.废弃的常量;2.无用的类
常量池中某个常量没有被任何一个类对象引用,则可以被回收
类的回收需要满足三个条件:1.该类的所有实例已经被回收;2.加载该类的ClassLoader已经被回收;3.该类对应的java.lang.Class对象没有在任何地方被引用,无法在任何地方通过
反射访问该类的方法.

#-----------------------#
回收算法:
标记-清除（major gc，回收老年代）

复制算法（minor gc，回收新生代）

标记-整理

分代收集算法（不同代使用不同回收算法）
